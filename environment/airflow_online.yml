version: '3.8'
x-airflow-common:
    &airflow-common
    image: moonlight165/wei_airflow:0.0.2
    user: root:root
    restart: always
    env_file:
        - .env
    volumes:
        - ./dags:/opt/airflow/dags
        - ./logs:/opt/airflow/logs
        - ./plugins:/opt/airflow/plugins
    depends_on:
        airflow_redis:
            condition: service_healthy
        airflow_postgres:
            condition: service_healthy
    deploy:
        resources:
            limits:
                cpus: "1"
                memory: "2G"
services:
    airflow_redis:
        image: redis:5.0.5
        container_name: airflow_redis
        hostname: redis
        environment:
            REDIS_HOST: redis
            REDIS_PORT: 6379
        networks:
            airflow: 
                ipv4_address: 172.30.240.3
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 30s
            retries: 10
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: "8G"
    airflow_postgres:
        image: postgres:13.1
        container_name: airflow_postgres
        hostname: postgres
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - ./pgdata:/var/lib/postgresql/data/pgdata
        ports:
            - 5438:5432
        networks:
            airflow: 
                ipv4_address: 172.30.240.4
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 10s
            timeout: 30s
            retries: 5
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: "4G"
    airflow_initdb:
        <<: *airflow-common
        container_name: airflow_initdb
        hostname: initdb
        command: bash -c """
                    airflow db init && 
                    airflow users create
                        --firstname eric
                        --lastname jiang
                        --email zhenweiu66@gmail.com
                        --password jiang123
                        --username ericjiang
                        --role Admin"""
        networks:
            airflow: 
                ipv4_address: 172.30.240.5
    airflow-webserver:
        <<: *airflow-common
        container_name: airflow_webserver
        hostname: webserver
        ports:
            - "8085:8080"
        command: airflow webserver
        networks:
            airflow: 
                ipv4_address: 172.30.240.6
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:8085/health"]
            interval: 5s
            timeout: 60s
            retries: 5
    airflow_scheduler:
        <<: *airflow-common
        container_name: airflow_scheduler
        hostname: scheduler
        command: airflow scheduler
        networks:
            airflow: 
                ipv4_address: 172.30.240.7
        healthcheck:
            test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
            interval: 5s
            timeout: 60s
            retries: 5
    airflow_worker:
        <<: *airflow-common
        container_name: airflow_worker
        hostname: worker
        command: airflow celery worker -q data-analyze
        networks:
            airflow: 
                ipv4_address: 172.30.240.8
        healthcheck:
            test:
                - "CMD-SHELL"
                - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
            interval: 5s
            timeout: 60s
            retries: 5
    airflow_flower:
        <<: *airflow-common
        container_name: airflow_flower
        hostname: flower
        ports:
            - "5561:5555"
        command: airflow celery flower
        networks:
            airflow: 
                ipv4_address: 172.30.240.9
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:5561/"]
            interval: 5s
            timeout: 60s
            retries: 5
networks:
    airflow:
        driver: bridge
        ipam: 
            driver: default
            config:
                - subnet: 172.30.0.0/16
